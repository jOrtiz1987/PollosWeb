package com.mx.pollos.model;

// Generated 08-dic-2015 22:32:59 by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Ventaremolque generated by hbm2java
 */
@Entity
@Table(name = "ventaremolque")
public class VentaRemolque implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idVentaRemolque;
	private Empleado empleadoByChava;
	private Remolque remolque;
	private Empleado empleadoByParillero;
	private SemanaDia semanadia;
	private Double cantPollos;
	private Double cantPapas;
	private Set<MovimientoPapas> movimientopapasesForRemolqueDestino = new HashSet<MovimientoPapas>(0);
	private Set<MovimientoPapas> movimientopapasesForRemolqueOrigen = new HashSet<MovimientoPapas>(0);
	private Set<MovimientoPollos> movimientopollosesForRemolqueDestino = new HashSet<MovimientoPollos>(0);
	private Set<GastoSemana> gastosemanas = new HashSet<GastoSemana>(0);
	private Set<ConsolidadoVentaRemolque> consolidadoventaremolques = new HashSet<ConsolidadoVentaRemolque>(0);
	private Set<MovimientoPollos> movimientopollosesForRemolqueOrigen = new HashSet<MovimientoPollos>(0);
	private Set<VentaRemolquePieza> ventaremolquepiezas = new HashSet<VentaRemolquePieza>(0);

	public VentaRemolque() {
	}

	public VentaRemolque(Empleado empleadoByChava, Remolque remolque,
			Empleado empleadoByParillero, SemanaDia semanadia, Double cantPollos,
			Double cantPapas) {
		this.empleadoByChava = empleadoByChava;
		this.remolque = remolque;
		this.empleadoByParillero = empleadoByParillero;
		this.semanadia = semanadia;
		this.cantPollos = cantPollos;
		this.cantPapas = cantPapas;
	}

	public VentaRemolque(Empleado empleadoByChava, Remolque remolque,
			Empleado empleadoByParillero, SemanaDia semanadia, Double cantPollos,
			Double cantPapas,
			Set<MovimientoPapas> movimientopapasesForRemolqueDestino,
			Set<MovimientoPapas> movimientopapasesForRemolqueOrigen,
			Set<MovimientoPollos> movimientopollosesForRemolqueDestino,
			Set<GastoSemana> gastosemanas,
			Set<ConsolidadoVentaRemolque> consolidadoventaremolques,
			Set<MovimientoPollos> movimientopollosesForRemolqueOrigen,
			Set<VentaRemolquePieza> ventaremolquepiezas) {
		this.empleadoByChava = empleadoByChava;
		this.remolque = remolque;
		this.empleadoByParillero = empleadoByParillero;
		this.semanadia = semanadia;
		this.cantPollos = cantPollos;
		this.cantPapas = cantPapas;
		this.movimientopapasesForRemolqueDestino = movimientopapasesForRemolqueDestino;
		this.movimientopapasesForRemolqueOrigen = movimientopapasesForRemolqueOrigen;
		this.movimientopollosesForRemolqueDestino = movimientopollosesForRemolqueDestino;
		this.gastosemanas = gastosemanas;
		this.consolidadoventaremolques = consolidadoventaremolques;
		this.movimientopollosesForRemolqueOrigen = movimientopollosesForRemolqueOrigen;
		this.ventaremolquepiezas = ventaremolquepiezas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idVentaRemolque", unique = true, nullable = false)
	public Integer getIdVentaRemolque() {
		return this.idVentaRemolque;
	}

	public void setIdVentaRemolque(Integer idVentaRemolque) {
		this.idVentaRemolque = idVentaRemolque;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "chava", nullable = false)
	public Empleado getEmpleadoByChava() {
		return this.empleadoByChava;
	}

	public void setEmpleadoByChava(Empleado empleadoByChava) {
		this.empleadoByChava = empleadoByChava;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "remolque", nullable = false)
	public Remolque getRemolque() {
		return this.remolque;
	}

	public void setRemolque(Remolque remolque) {
		this.remolque = remolque;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parillero", nullable = false)
	public Empleado getEmpleadoByParillero() {
		return this.empleadoByParillero;
	}

	public void setEmpleadoByParillero(Empleado empleadoByParillero) {
		this.empleadoByParillero = empleadoByParillero;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "semanaDia", nullable = false)
	public SemanaDia getSemanadia() {
		return this.semanadia;
	}

	public void setSemanadia(SemanaDia semanadia) {
		this.semanadia = semanadia;
	}

	@Column(name = "cantPollos", nullable = false)
	public Double getCantPollos() {
		return this.cantPollos;
	}

	public void setCantPollos(Double cantPollos) {
		this.cantPollos = cantPollos;
	}

	@Column(name = "cantPapas", nullable = false)
	public Double getCantPapas() {
		return this.cantPapas;
	}

	public void setCantPapas(Double cantPapas) {
		this.cantPapas = cantPapas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventaremolqueByRemolqueDestino")
	public Set<MovimientoPapas> getMovimientopapasesForRemolqueDestino() {
		return this.movimientopapasesForRemolqueDestino;
	}

	public void setMovimientopapasesForRemolqueDestino(
			Set<MovimientoPapas> movimientopapasesForRemolqueDestino) {
		this.movimientopapasesForRemolqueDestino = movimientopapasesForRemolqueDestino;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventaremolqueByRemolqueOrigen")
	public Set<MovimientoPapas> getMovimientopapasesForRemolqueOrigen() {
		return this.movimientopapasesForRemolqueOrigen;
	}

	public void setMovimientopapasesForRemolqueOrigen(
			Set<MovimientoPapas> movimientopapasesForRemolqueOrigen) {
		this.movimientopapasesForRemolqueOrigen = movimientopapasesForRemolqueOrigen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventaremolqueByRemolqueDestino")
	public Set<MovimientoPollos> getMovimientopollosesForRemolqueDestino() {
		return this.movimientopollosesForRemolqueDestino;
	}

	public void setMovimientopollosesForRemolqueDestino(
			Set<MovimientoPollos> movimientopollosesForRemolqueDestino) {
		this.movimientopollosesForRemolqueDestino = movimientopollosesForRemolqueDestino;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventaremolque")
	public Set<GastoSemana> getGastosemanas() {
		return this.gastosemanas;
	}

	public void setGastosemanas(Set<GastoSemana> gastosemanas) {
		this.gastosemanas = gastosemanas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventaremolque")
	public Set<ConsolidadoVentaRemolque> getConsolidadoventaremolques() {
		return this.consolidadoventaremolques;
	}

	public void setConsolidadoventaremolques(
			Set<ConsolidadoVentaRemolque> consolidadoventaremolques) {
		this.consolidadoventaremolques = consolidadoventaremolques;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventaremolqueByRemolqueOrigen")
	public Set<MovimientoPollos> getMovimientopollosesForRemolqueOrigen() {
		return this.movimientopollosesForRemolqueOrigen;
	}

	public void setMovimientopollosesForRemolqueOrigen(
			Set<MovimientoPollos> movimientopollosesForRemolqueOrigen) {
		this.movimientopollosesForRemolqueOrigen = movimientopollosesForRemolqueOrigen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventaremolque")
	public Set<VentaRemolquePieza> getVentaremolquepiezas() {
		return this.ventaremolquepiezas;
	}

	public void setVentaremolquepiezas(
			Set<VentaRemolquePieza> ventaremolquepiezas) {
		this.ventaremolquepiezas = ventaremolquepiezas;
	}

}
